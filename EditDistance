public class Solution {
    /**
     * @param word1 & word2: Two string.
     * @return: The minimum number of steps.
     */
    public int minDistance(String word1, String word2) {
        // write your code here
        if(word1.length() == 0)
            return word2.length();
        if(word2.length() == 0)
            return word1.length();
        
        int[][] table = new int[word2.length() + 1][word1.length() + 1];
        for(int i = 0; i <= word2.length(); i++){
            table[i][0] = i;
        }
        for(int i = 0; i <= word1.length(); i++){
            table[0][i] = i;
        }
        for(int i = 1 ; i <= word2.length(); i++){
            for(int j = 1; j <= word1.length(); j++){
                if(word1.charAt(j - 1) == word2.charAt(i - 1)){
                    table[i][j] = table[i - 1][j - 1];
                }else{
                    table[i][j] = Math.min(Math.min(table[i][j - 1], table[i - 1][j]), table[i - 1][j - 1]) + 1;
                }
            }
        }
        return table[word2.length()][word1.length()];
    }
}
